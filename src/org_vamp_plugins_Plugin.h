/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_vamp_plugins_Plugin */

#ifndef _Included_org_vamp_plugins_Plugin
#define _Included_org_vamp_plugins_Plugin
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    dispose
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_vamp_1plugins_Plugin_dispose
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getVampApiVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_vamp_1plugins_Plugin_getVampApiVersion
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getIdentifier
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_vamp_1plugins_Plugin_getIdentifier
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getName
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_vamp_1plugins_Plugin_getName
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getDescription
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_vamp_1plugins_Plugin_getDescription
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getMaker
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_vamp_1plugins_Plugin_getMaker
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getCopyright
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_vamp_1plugins_Plugin_getCopyright
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getPluginVersion
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_vamp_1plugins_Plugin_getPluginVersion
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getParameterDescriptors
 * Signature: ()[Lorg/vamp_plugins/ParameterDescriptor;
 */
JNIEXPORT jobjectArray JNICALL Java_org_vamp_1plugins_Plugin_getParameterDescriptors
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getParameter
 * Signature: (Ljava/lang/String;)F
 */
JNIEXPORT jfloat JNICALL Java_org_vamp_1plugins_Plugin_getParameter
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    setParameter
 * Signature: (Ljava/lang/String;F)V
 */
JNIEXPORT void JNICALL Java_org_vamp_1plugins_Plugin_setParameter
  (JNIEnv *, jobject, jstring, jfloat);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getPrograms
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_org_vamp_1plugins_Plugin_getPrograms
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getCurrentProgram
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_vamp_1plugins_Plugin_getCurrentProgram
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    selectProgram
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_vamp_1plugins_Plugin_selectProgram
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    initialise
 * Signature: (III)Z
 */
JNIEXPORT jboolean JNICALL Java_org_vamp_1plugins_Plugin_initialise
  (JNIEnv *, jobject, jint, jint, jint);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    reset
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_vamp_1plugins_Plugin_reset
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getInputDomain
 * Signature: ()Lorg/vamp_plugins/Plugin/InputDomain;
 */
JNIEXPORT jobject JNICALL Java_org_vamp_1plugins_Plugin_getInputDomain
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getPreferredBlockSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_vamp_1plugins_Plugin_getPreferredBlockSize
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getPreferredStepSize
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_vamp_1plugins_Plugin_getPreferredStepSize
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getMinChannelCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_vamp_1plugins_Plugin_getMinChannelCount
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getMaxChannelCount
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_vamp_1plugins_Plugin_getMaxChannelCount
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getOutputDescriptors
 * Signature: ()[Lorg/vamp_plugins/OutputDescriptor;
 */
JNIEXPORT jobjectArray JNICALL Java_org_vamp_1plugins_Plugin_getOutputDescriptors
  (JNIEnv *, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    process
 * Signature: ([[FLorg/vamp_plugins/RealTime;)Ljava/util/TreeMap;
 */
JNIEXPORT jobject JNICALL Java_org_vamp_1plugins_Plugin_process
  (JNIEnv *, jobject, jobjectArray, jobject);

/*
 * Class:     org_vamp_plugins_Plugin
 * Method:    getRemainingFeatures
 * Signature: ()Ljava/util/TreeMap;
 */
JNIEXPORT jobject JNICALL Java_org_vamp_1plugins_Plugin_getRemainingFeatures
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
